# Ring the bell if any background window rang a bell
set -g bell-action any

set-option -g default-shell /bin/zsh
# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal "screen-256color"
#
set-option -g default-command "reattach-to-user-namespace -l /bin/zsh -l"

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Create splits and vertical splits
bind-key v split-window -h
bind-key ^V split-window -h
bind-key s split-window
bind-key ^S split-window

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind-key J resize-pane -D 20
bind-key K resize-pane -U 20
bind-key H resize-pane -L 20
bind-key L resize-pane -R 20

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi
#
# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set -g base-index 1

# # color scheme (styled as vim-powerline)
# set -g status-left-length 52
# set -g status-right-length 451
# set -g status-fg white
# set -g status-bg colour234
# set -g pane-border-fg colour245
# set -g pane-active-border-fg colour39
# set -g message-fg colour16
# set -g message-bg colour221
# set -g message-attr bold
# set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
# set -g window-status-format "#[fg=colour235,bg=colour252,bold] #I #W "
# set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=black,bg=colour39,noreverse,bold] #I: #W #[fg=colour39,bg=colour234,nobold]⮀"

set -g window-status-current-format "#[fg=colour234,bg=white,noreverse,bold][ #W* ]"

# Patch for OS X pbpaste and pbcopy under tmux.
# set-option -g default-command "reattach-to-user-namespace -l zsh"

# Screen like binding
# unbind C-b
# set -g prefix C-a
#
# No escape time for vi mode
set -sg escape-time 0

# Screen like binding for last window
# unbind l
bind C-b last-window

# Bigger history
set -g history-limit 10000
#

# Mouse scrolling
setw -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
